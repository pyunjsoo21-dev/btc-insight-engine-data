name: binance-btcusdt-snapshot

on:
  schedule:
    # 매일 한국시간 00·06·12·18시 (UTC 15,21,03,09)
    - cron: "0 15,21,3,9 * * *"
  workflow_dispatch: {}

jobs:
  fetch-and-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run snapshot (Binance USDⓈ-M Futures)
        run: |
          python - <<'PY'
          import json, os, urllib.request, urllib.parse, datetime

          # ---------- Settings ----------
          SYMBOL = "BTCUSDT"         # USDⓈ-M 선물 심볼
          BASE  = "https://fapi.binance.com"  # USDⓈ-M Futures REST
          # --------------------------------

          def get(path, params):
            url = BASE + path + "?" + urllib.parse.urlencode(params)
            req = urllib.request.Request(url, headers={"User-Agent":"BJ/1.2","Accept":"application/json"})
            with urllib.request.urlopen(req, timeout=20) as r:
              return json.loads(r.read().decode())

          # 24h 티커 (가격, 고저, 변화율 등)
          t = get("/fapi/v1/ticker/24hr", {"symbol": SYMBOL})   # :contentReference[oaicite:1]{index=1}

          # 캔들: 4H, 12H, 1D 각각 최신 1개 OHLC
          def k(interval):
            arr = get("/fapi/v1/klines", {"symbol": SYMBOL, "interval": interval, "limit": 1})  # :contentReference[oaicite:2]{index=2}
            o,h,l,c = float(arr[0][1]), float(arr[0][2]), float(arr[0][3]), float(arr[0][4])
            return {"interval": interval, "open": o, "high": h, "low": l, "close": c}
          k4  = k("4h")
          k12 = k("12h")
          k1d = k("1d")

          # 펀딩비 최근 기록 1개 (공개 엔드포인트)
          fr = get("/fapi/v1/fundingRate", {"symbol": SYMBOL, "limit": 1})  # list 반환  :contentReference[oaicite:3]{index=3}
          funding = float(fr[0]["fundingRate"]) if fr else None

          # 현재 미결제약정 (스냅샷)
          oi_now = get("/fapi/v1/openInterest", {"symbol": SYMBOL})          # :contentReference[oaicite:4]{index=4}
          oi_value = float(oi_now["openInterest"]) if "openInterest" in oi_now else None

          # 미결제약정 통계(타임시리즈, 최근값; period 선택 가능: 5m~1d)
          oi_stat = get("/futures/data/openInterestHist", {"symbol": SYMBOL, "period": "1h", "limit": 1})  # :contentReference[oaicite:5]{index=5}
          oi_hist = float(oi_stat[0]["sumOpenInterest"]) if oi_stat else None

          # 결과 JSON
          now_utc = datetime.datetime.utcnow()
          data = {
            "meta": {
              "time_utc": now_utc.strftime("%Y-%m-%d %H:%M:%S UTC"),
              "time_kst": (now_utc + datetime.timedelta(hours=9)).strftime("%Y-%m-%d %H:%M:%S KST"),
              "source": "binance_usds_futures"
            },
            "ticker_24h": {
              "last": float(t["lastPrice"]),
              "high24h": float(t["highPrice"]),
              "low24h": float(t["lowPrice"]),
              "change24h_percent": float(t["priceChangePercent"])
            },
            "kline": {"4h": k4, "12h": k12, "1d": k1d},
            "funding_rate": funding,
            "open_interest": {
              "snapshot": oi_value,
              "hist_1h_latest": oi_hist
            }
          }

          os.makedirs("data", exist_ok=True)
          with open("data/snapshot.json","w") as fp:
            json.dump(data, fp, indent=2)
          print("✅ Snapshot saved:", data["meta"]["time_kst"])
          PY

      - name: Show snapshot.json (debug)
        run: |
          head -n 50 data/snapshot.json || echo "⚠️ snapshot.json NOT FOUND"

      - name: Commit & Push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data/snapshot.json
          git commit -m "auto: binance snapshot $(date -u +'%Y-%m-%dT%H:%M:%SZ')" || echo "no changes"
          git push
